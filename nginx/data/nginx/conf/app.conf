types {
    application/x-ns-proxy-autoconfig     dat;
}

upstream backend {
    server host.docker.internal:8080;
}

server {
    listen 80;
    server_name host.domain.tld;
    location / {
        return 301 https://$host$request_uri;
    }    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
    listen 443 ssl http2;
    server_name host.domain.tld;
    
    ssl_certificate /etc/letsencrypt/live/host.domain.tld/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/host.domain.tld/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/host.domain.tld/chain.pem;

    # replace with the IP address of your resolver
    #resolver x.x.x.x;
    
    location / {
        proxy_pass http://backend;
        proxy_hide_header Strict-Transport-Security;

        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass_request_headers on;

        client_max_body_size 200M;

        proxy_busy_buffers_size 512k;
        proxy_buffers 4 512k;
        proxy_buffer_size 256k;
    }
}
